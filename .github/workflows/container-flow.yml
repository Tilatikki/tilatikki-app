name: Build React app container and Deploy to Az WebApp

#This means that whenever code is pushed to the main branch, this workflow will be executed.
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest # The build job runs on the latest version of Ubuntu.

    steps:
    - uses: actions/checkout@v2 # This step checks out the repository so that the workflow can access the contents of the repository.

    - uses: azure/docker-login@v1 # This step logs in to the Docker registry.
      with:
        # miusta vaihtaa ajankohtaiseks
        login-server: # specifies the Docker registry to log in to.
        username: # nimi
        password: ${{ secrets.REGISTRY_PASSWORD }} # username and password are credentials required to authenticate with the Docker registry. The password is retrieved from GitHub Secrets.
    - run: |
        docker:build .  # builds the Docker image. # miusta vaihtaa ajankohtaiseks
        docker # pushes the image to the Docker registry. # miusta vaihtaa ajankohtaiseks

  deploy:
    runs-on: ubuntu-latest # The deploy job runs on the latest version of Ubuntu.
    needs: build # The deploy job depends on the build job. This ensures that the build job completes successfully before the deploy job starts.

    steps:
      - name: 'Deploying Container to ACR' # This step uses the Azure Container Registry (ACR) task to deploy the container image to ACR. For more information, see
        uses: azure/webapps-deploy@v2 # This is the deployment task for Azure Web Apps. For more information, see
        id: deploy-to-webapp # The id is used to reference the output variable in the next step.
        with:
          # miusta vaihtaa ajankohtaiseks
          app-name: 'tilatikki' # The name of the web app to deploy to.
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }} # The publish profile is retrieved from GitHub Secrets.
          images: '${{ github.sha }}' # The image to deploy to the web app.